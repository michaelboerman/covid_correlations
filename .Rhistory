cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal()
View(cors_over_time)
# for loop for calculating correlation per date
unique_dates <- unique(covid_data$date)
unique_dates <- unique_dates[order(unique_dates)]
unique_dates <- unique_dates[30:length(unique_dates)]
cors_over_time <- data.frame("date" = unique_dates,
"correlation" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
test_df <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
test_correlation <- cor(test_df$density, test_df$deaths, use = "complete.obs")
cors_over_time$correlation[i] <-  test_correlation
}
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal()
View(cors_over_time)
# for loop for calculating correlation per date
unique_dates <- unique(covid_data$date)
unique_dates <- unique_dates[order(unique_dates)]
unique_dates <- unique_dates[30:length(unique_dates)-1]
cors_over_time <- data.frame("date" = unique_dates,
"correlation" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
test_df <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
test_correlation <- cor(test_df$density, test_df$deaths, use = "complete.obs")
cors_over_time$correlation[i] <-  test_correlation
}
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal()
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(correlation))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman")
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
) +
NULL
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
?theme
cor_plot <- cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
cor_plot %>%
ylims(c(-1, 1))
cor_plot %>%
ylim(c(-1, 1))
cor_plot %>%
scale_y_continuous(limits = c(-1, 1))
cor_plot <- cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation))+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
?geom_hline
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expansion = expand_scale(mult = 0))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"))
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
# for loop for calculating correlation per date
unique_dates <- unique(covid_data$date)
unique_dates <- unique_dates[order(unique_dates)]
unique_dates <- unique_dates[31:length(unique_dates)-1]
cors_over_time <- data.frame("date" = unique_dates,
"correlation" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
test_df <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
test_correlation <- cor(test_df$density, test_df$deaths, use = "complete.obs")
cors_over_time$correlation[i] <-  test_correlation
}
cors_over_time %>%
ggplot(aes(x = date, y = correlation))+
geom_line() +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
unique_dates <- unique(covid_data$date)
unique_dates <- unique_dates[order(unique_dates)]
unique_dates <- unique_dates[31:length(unique_dates)-1]
cors_over_time <- data.frame("date" = unique_dates,
"death_cor" = rep(NA, length(unique_dates)),
"case_cor" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
filtered_date_data <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
cors_over_time$death_cor[i] <- cor(filtered_date_data$density, filtered_date_data$deaths, use = "complete.obs")
cors_over_time$case_cor[i] <- cor(filtered_date_data$density, filtered_date_data$cases, use = "complete.obs")
}
cors_over_time <- data.frame("date" = unique_dates,
"death_cor" = rep(NA, length(unique_dates)),
"case_cor" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
filtered_date_data <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
cors_over_time$death_cor[i] <- cor(filtered_date_data$density, filtered_date_data$deaths, use = "complete.obs")
cors_over_time$case_cor[i] <- cor(filtered_date_data$density, filtered_date_data$cases, use = "complete.obs")
}
for (i in 1:length(unique_dates)) {
filtered_date_data <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
cors_over_time$death_cor[i] <- cor(filtered_date_data$density, filtered_date_data$deaths, use = "complete.obs")
cors_over_time$case_cor[i] <- cor(filtered_date_data$density, filtered_date_data$confirmed, use = "complete.obs")
}
View(cors_over_time)
unique_dates <- unique(covid_data$date)
unique_dates <- unique_dates[order(unique_dates)]
unique_dates <- unique_dates[33:length(unique_dates)-1]
cors_over_time <- data.frame("date" = unique_dates,
"death_cor" = rep(NA, length(unique_dates)),
"case_cor" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
filtered_date_data <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
cors_over_time$death_cor[i] <- cor(filtered_date_data$density, filtered_date_data$deaths, use = "complete.obs")
cors_over_time$case_cor[i] <- cor(filtered_date_data$density, filtered_date_data$confirmed, use = "complete.obs")
}
unique_dates <- unique(covid_data$date)
# sort by date, such that Jan 2021 will come at the end, not beginning
unique_dates <- unique_dates[order(unique_dates)]
# skip Jan 2020
unique_dates <- unique_dates[33:length(unique_dates)-1]
cors_over_time <- data.frame("date" = unique_dates,
"death_cor" = rep(NA, length(unique_dates)),
"case_cor" = rep(NA, length(unique_dates)))
for (i in 1:length(unique_dates)) {
filtered_date_data <- covid_data %>%
filter(date == unique_dates[i]) %>%
identity()
cors_over_time$death_cor[i] <- cor(filtered_date_data$density, filtered_date_data$deaths, use = "complete.obs")
cors_over_time$case_cor[i] <- cor(filtered_date_data$density, filtered_date_data$confirmed, use = "complete.obs")
}
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = death_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = death_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$correlation),
linetype = "dashed", color = "gray")+
# scale_y_continuous(expand = expand_scale(mult = 0)) +
# scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = death_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$death_cor),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = case_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$case_cor),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = case_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$case_cor),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.2, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = death_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$death_cor),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
windowsFonts()
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = death_cor)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$death_cor),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
library(extrafont)
# For GGplot aestehtics
install.packages("extrafont")
library(extrafont)
extrafont::fonts()
font_import()
# plot for correlation between pop density adn deaths
variable_to_plot <- "death_cor"
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = variable_to_plot)) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(cors_over_time$variable_to_plot),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
geom_line(aes(y = get(variable_to_plot)) +
cors_over_time %>%
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(get(cors_over_time$variable_to_plot)),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(get(cors_over_time$variable_to_plot)),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal()
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(get(cors_over_time$`variable_to_plot`)),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
?get
get(cors_over_time$`variable_to_plot`)
get(variable_to_plot)
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal() +
geom_hline(yintercept = 0)+
geom_hline(yintercept = mean(get(variable_to_plot)),
linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
cors_over_time %>%
ggplot(aes(x = date))+
geom_line(aes(y = get(variable_to_plot))) +
theme_minimal() +
geom_hline(yintercept = 0)+
# geom_hline(yintercept = mean(get(variable_to_plot)),
#            linetype = "dashed", color = "gray")+
scale_y_continuous(expand = expand_scale(mult = 0),
limits = c(-0.25, 0)) +
scale_x_date(expand = expand_scale(mult = 0)) +
labs(title = "Correlation between Population Density and COVID Deaths",
subtitle = "Filtered by date",
caption = "Source: UN Population Dynamics, Oxford COVID-19 Government Response Tracker. \n Chart: Michael Boerman, https://github.com/michaelboerman") +
theme(text = element_text(family="TT Times New Roman"),
axis.title.x = element_blank(),
axis.title.y = element_text("Correlation"),
axis.line.y = element_line())
